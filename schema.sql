DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ROLES;
DROP TABLE IF EXISTS MOVIE;
DROP TABLE IF EXISTS DIRECTOR;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS MOVIE_GENRE;

CREATE TABLE USER (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user_name VARCHAR(120) UNIQUE NOT NULL,
  password VARCHAR(120) UNIQUE NOT NULL,
  role_id INTEGER,
  -- created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  FOREIGN KEY (role_id) REFERENCES ROLE (id)
);

CREATE TABLE ROLES (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  role_type TEXT UNIQUE NOT NULL
  -- created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE DIRECTOR (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL
  -- created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE MOVIE (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  imdb_score FLOAT NOT NULL DEFAULT 0.0,
  popularity FLOAT NOT NULL DEFAULT 0.0,
  director_id INTEGER,
  -- created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (director_id) REFERENCES DIRECTOR (id)
);

CREATE TABLE GENRE (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL UNIQUE
  -- created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE MOVIE_GENRE (
  movie_id INTEGER,
  genre_id INTEGER,
  FOREIGN KEY (movie_id) REFERENCES MOVIE (id),
  FOREIGN KEY (genre_id) REFERENCES GENRE (id)
  -- created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
